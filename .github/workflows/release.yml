name: Release

on:
  push:
    tags: v*

permissions: read-all

jobs:
  prepare-release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: appstreamcli metainfo-to-news
        uses: docker://ghcr.io/swsnr/turnon/ci:main
        with:
          args: appstreamcli metainfo-to-news resources/de.swsnr.turnon.metainfo.xml.in news.yaml
      - run: yq eval-all '[.]' -oj news.yaml > news.json
      - run: jq -r --arg tag "${TAGNAME}" '.[] | select(.Version == ($tag | ltrimstr("v"))) | .Description | tostring' > relnotes.md < news.json
        env:
          TAGNAME: '${{ github.ref_name }}'
      - run: cat relnotes.md
      - uses: actions/upload-artifact@v4
        with:
          name: relnotes
          path: relnotes.md

  vendor-dependencies:
    permissions:
      id-token: write
      contents: read
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo --version
      - run: tar --version
      - run: zstd --version
      - run: echo "${GITHUB_SHA}"
      # Generate a reproducible vendor bundle
      - run: env LC_ALL=C TZ=UTC0 echo "timestamp=$(git show --quiet --date='format-local:%Y-%m-%dT%H:%M:%SZ' --format="%cd" "${GITHUB_SHA}")" >> "$GITHUB_OUTPUT"
        id: timestamp
      - run: cargo vendor --locked
      - run: env LC_ALL=C tar --numeric-owner --owner 0 --group 0 --sort name --mode='go+u,go-w' --format=posix --pax-option=exthdr.name=%d/PaxHeaders/%f --pax-option=delete=atime,delete=ctime --mtime="${{ steps.timestamp.outputs.timestamp }}" -c -f turnon-${{ github.ref_name }}-vendor.tar.zst --zstd vendor
      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: turnon-${{ github.ref_name }}-vendor.tar.zst
      - uses: actions/upload-artifact@v4
        with:
          name: turnon-${{ github.ref_name }}-vendor.tar.zst
          path: turnon-${{ github.ref_name }}-vendor.tar.zst

  git-archive:
    permissions:
      id-token: write
      contents: read
      attestations: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: env LC_ALL=C TZ=UTC0 git archive --format tar --prefix 'turnon-${{ github.ref_name }}/' --output 'turnon-${{ github.ref_name }}.tar' "${{ github.sha }}"
      - run: zstd 'turnon-${{ github.ref_name }}.tar'
      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'turnon-${{ github.ref_name }}.tar.zst'
      - uses: actions/upload-artifact@v4
        with:
          name: turnon-${{ github.ref_name }}.tar.zst
          path: turnon-${{ github.ref_name }}.tar.zst

  create-release:
    runs-on: ubuntu-latest
    needs: [prepare-release-notes, git-archive, vendor-dependencies]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true
      - uses: softprops/action-gh-release@v2
        with:
          body_path: ./artifacts/relnotes.md
          make_latest: true
          files: |
            ./artifacts/*.tar.*

  # Update flatpak manifest
  update-manifest:
    runs-on: ubuntu-latest
    needs: [git-archive, vendor-dependencies]
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true
      - run: echo ARCHIVE_SHA512="$(sha512sum artifacts/turnon-${{ github.ref_name }}.tar.zst | cut -d' ' -f1)" >> "$GITHUB_ENV"
      - run: echo VENDOR_SHA512="$(sha512sum artifacts/vendor.tar.zst | cut -d' ' -f1)" >> "$GITHUB_ENV"
      - run: rm -rf artifacts
      - run: yq eval -i '.modules.[0].sources.[0].url = "https://github.com/swsnr/turnon/releases/download/$GITHUB_REF_NAME/turnon-$GITHUB_REF_NAME.tar.zst"' flatpak/de.swsnr.turnon.yaml
      - run: yq eval -i '.modules.[0].sources.[0].sha512 = "$ARCHIVE_SHA512"' flatpak/de.swsnr.turnon.yaml
      - run: yq eval -i '.modules.[0].sources.[1].url = "https://github.com/swsnr/turnon/releases/download/$GITHUB_REF_NAME/turnon-$GITHUB_REF_NAME-vendor.tar.zst"' flatpak/de.swsnr.turnon.yaml
      - run: yq eval -i '.modules.[0].sources.[1].sha512 = "$VENDOR_SHA512"' flatpak/de.swsnr.turnon.yaml
      - run: yq eval -i '(.. | select(tag == "!!str")) |= envsubst' flatpak/de.swsnr.turnon.yaml
      # A little sanity check
      - run: git diff
      # Create a pull request to update the manifest on main
      - uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "Update flatpak manifest for ${{ github.ref_name }}"
          branch: workflow/update-flatpak-manifest
          base: main
          sign-commits: true
          delete-branch: true
          title: "Update flatpak manifest for ${{ github.ref_name }}"
          body: |
            Update flatpak manifest for release ${{ github.ref_name }}.

            After merging, manually dispatch the [sync workflow in the flathub repo](https://github.com/flathub/de.swsnr.turnon/actions/workflows/sync.yaml) to update the flathub manifest.
          assignees: swsnr
          draft: always-true
